package handlers

import (
	"context"
	"fmt"
	"log"
	"strings"

	"gopkg.in/telebot.v3"
)

// Handler –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
type Handler interface {
	Handle(ctx context.Context, c telebot.Context) error
}

// Handlers —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
type Handlers struct {
	// –ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
	// repository repository.TaskRepository
	// llmClient llm.Client
	// limiter limiter.Limiter
}

// NewHandlers —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Handlers
func NewHandlers() *Handlers {
	return &Handlers{}
}

// RegisterRoutes —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
func (h *Handlers) RegisterRoutes(bot *telebot.Bot) {
	// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
	bot.Handle("/start", h.handleStart)
	bot.Handle("/help", h.handleHelp)
	bot.Handle("/add", h.handleAdd)
	bot.Handle("/list", h.handleList)
	bot.Handle("/done", h.handleDone)
	bot.Handle("/edit", h.handleEdit)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–µ—Ä–µ—Å—ã–ª–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
	bot.Handle(telebot.OnText, h.handleMessage)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
	bot.Handle(telebot.OnCallback, h.handleCallback)
}

// handleStart –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
func (h *Handlers) handleStart(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		welcomeMessage := `
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Task Assistant Bot!

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üìù /add "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏" —Å—Ä–æ–∫: 2025-07-15 - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
üìã /list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
‚úÖ /done [id] - –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
‚úèÔ∏è /edit [id] –Ω–æ–≤–æ–µ_–æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–æ–∫: ... - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É
‚ùì /help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏—Ö –∫ –∑–∞–¥–∞—á–∞–º –∫–∞–∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—è.

–£–¥–∞—á–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è! üöÄ
`
		return c.Send(strings.TrimSpace(welcomeMessage))
	})
}

// handleHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
func (h *Handlers) handleHelp(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		helpMessage := `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:
/add "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏" —Å—Ä–æ–∫: 2025-07-15
–ü—Ä–∏–º–µ—Ä: /add "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã" —Å—Ä–æ–∫: 2025-07-20

üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á:
/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Å—Ä–æ–∫—É)

‚úÖ –û—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
/done [id] - –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
–ü—Ä–∏–º–µ—Ä: /done 3

‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:
/edit [id] –Ω–æ–≤–æ–µ_–æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–æ–∫: 2025-07-25
–ü—Ä–∏–º–µ—Ä: /edit 2 "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –≥–æ—Ç–æ–≤–∏—Ç—å —É–∂–∏–Ω" —Å—Ä–æ–∫: 2025-07-21

üí¨ –û–±—Å—É–∂–¥–µ–Ω–∏—è:
–ü–µ—Ä–µ—Å—ã–ª–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∑–∞–¥–∞—á–∞–º

üìä –§–æ—Ä–º–∞—Ç—ã –¥–∞—Ç:
- 2025-07-15 (YYYY-MM-DD)
- 15.07.2025 (DD.MM.YYYY)
- 15/07/2025 (DD/MM/YYYY)

‚ùì /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
`
		return c.Send(strings.TrimSpace(helpMessage))
	})
}

// handleAdd –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /add
func (h *Handlers) handleAdd(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
		// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
		return c.Send("üöß –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
	})
}

// handleList –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /list
func (h *Handlers) handleList(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
		// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ –ë–î –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞
		return c.Send("üöß –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞—á –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
	})
}

// handleDone –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /done
func (h *Handlers) handleDone(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π
		// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ ID –∑–∞–¥–∞—á–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î
		return c.Send("üöß –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
	})
}

// handleEdit –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /edit
func (h *Handlers) handleEdit(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
		// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –≤—ã–∑–æ–≤ LLM API –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ë–î
		return c.Send("üöß –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
	})
}

// handleMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–µ—Ä–µ—Å—ã–ª–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
func (h *Handlers) handleMessage(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
		// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–π –∫ –∑–∞–¥–∞—á–∞–º

		// –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
		// –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º—ã–µ
		if c.Message().IsForwarded() {
			return c.Send("üöß –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
		}

		// –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–º–æ—â—å
		return c.Send("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
	})
}

// handleCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç inline-–∫–Ω–æ–ø–∫–∏
func (h *Handlers) handleCallback(c telebot.Context) error {
	return h.safeHandle(c, func() error {
		// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É inline-–∫–Ω–æ–ø–æ–∫
		// –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
		return c.Respond(&telebot.CallbackResponse{
			Text: "üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
		})
	})
}

// safeHandle –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ—à–∏–±–æ–∫
func (h *Handlers) safeHandle(c telebot.Context, handler func() error) error {
	defer func() {
		if r := recover(); r != nil {
			log.Printf("Panic in handler: %v", r)
			// –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			if err := c.Send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."); err != nil {
				log.Printf("Failed to send error message: %v", err)
			}
		}
	}()

	if err := handler(); err != nil {
		log.Printf("Handler error: %v", err)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
		if sendErr := c.Send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."); sendErr != nil {
			log.Printf("Failed to send error message: %v", sendErr)
		}

		return err
	}

	return nil
}

// validateCommand –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
func (h *Handlers) validateCommand(args []string, minArgs int) error {
	if len(args) < minArgs {
		return fmt.Errorf("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: –ø–æ–ª—É—á–µ–Ω–æ %d, —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º %d", len(args), minArgs)
	}
	return nil
}

// getUserID –ø–æ–ª—É—á–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
func (h *Handlers) getUserID(c telebot.Context) int64 {
	if c.Sender() != nil {
		return c.Sender().ID
	}
	return 0
}

// logUserAction –ª–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (h *Handlers) logUserAction(userID int64, action string, details string) {
	log.Printf("User %d: %s - %s", userID, action, details)
}
